{"version":3,"sources":["components/Button.js","components/ToggleVisibility.js","services/blogs.js","components/Blog.js","components/BlogForm.js","components/LoginForm.js","components/Notification.js","services/login.js","services/users.js","components/SignUpForm.js","App.js","index.js"],"names":["Button","marginBottom","color","label","id","className","handleClick","buttonStyle","fontSize","borderRadius","borderColor","backgroundColor","textDecoration","style","onClick","ToggleVisibility","React","forwardRef","props","ref","useState","visible","setVisibility","hideOrShow","display","labelOne","labelTwo","toggleVisibility","setToggleSignUp","useImperativeHandle","children","displayName","token","Blog","blog","loggedUser","modifyBlog","handleBlogDeletion","handleDeletion","window","confirm","title","author","paddingTop","paddingLeft","border","borderWidth","url","likes","user","username","toggleDeleteButton","BlogForm","addBlog","setTitle","setAuthor","setUrl","onSubmit","event","preventDefault","onChange","target","value","type","name","autoComplete","LoginForm","login","toggleSignUp","setUsername","password","setPassword","Notification","noticeToUser","messageStyle","code","padding","marginTop","message","getAll","axios","get","then","response","data","createBlog","a","post","headers","Authorization","res","updateBlog","put","setToken","newToken","deleteBlog","delete","credentials","getUser","createUser","SignUpForm","addUser","setUserName","setName","setPasswd","required","App","blogs","setBlogs","setUser","setNoticeToUser","blogFormRef","useRef","useEffect","blogService","isLoggedIn","localStorage","getItem","parsedUser","JSON","parse","sortedBlogs","concat","sort","b","reverse","alertUser","newMessage","newCode","setTimeout","handleLogin","loginService","setItem","stringify","console","log","error","registerUser","newUser","userService","createdUser","handleBlogCreation","newBlog","current","createdBlog","blogCreator","toBeUpdated","updatedBlog","map","removed","status","filter","removeItem","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.619353fa.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Button = ({ marginBottom, color, label, id, className, handleClick }) => {\n  const buttonStyle = {\n    fontSize: label === '&#10003;' ? '20px' : '15px',\n    borderRadius: 6,\n    borderColor: 'white',\n    backgroundColor: color,\n    textDecoration: 'none',\n    color: '#ffffff',\n    marginBottom: marginBottom,\n  }\n  return (\n    <>\n      <button style={buttonStyle} onClick={handleClick} id={id} className={className}>\n        {label}\n      </button>\n    </>\n  )\n}\n\nButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleClick: PropTypes.func,\n  color: PropTypes.string,\n  marginBottom: PropTypes.number,\n  id: PropTypes.string\n}\nexport default Button","import React, { useState, useImperativeHandle } from \"react\";\r\nimport Button from \"./Button\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ToggleVisibility = React.forwardRef((props, ref) => {\r\n  const [visible, setVisibility] = useState(false);\r\n\r\n  const hideOrShow = { display: visible ? \"\" : \"none\" };\r\n  const label = visible ? props.labelOne : props.labelTwo;\r\n\r\n  const toggleVisibility = () => {\r\n    if (label === \"Sign in\" || label === \"Register\")\r\n      label === \"Register\"\r\n        ? props.setToggleSignUp(true)\r\n        : props.setToggleSignUp(false);\r\n    setVisibility(!visible);\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({ toggleVisibility }));\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideOrShow} className=\"hideOrShow\">\r\n        {\" \"}\r\n        {props.children}{\" \"}\r\n      </div>\r\n      <Button\r\n        handleClick={toggleVisibility}\r\n        label={label}\r\n        className={props.className}\r\n        color={visible ? \"orange\" : \"#008CBA\"}\r\n        marginBottom={10}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nToggleVisibility.displayName = \"ToggleVisibility\";\r\n\r\nToggleVisibility.propTypes = {\r\n  labelOne: PropTypes.string.isRequired,\r\n  labelTwo: PropTypes.string.isRequired,\r\n  id: PropTypes.string,\r\n};\r\n\r\nexport default ToggleVisibility;\r\n","import axios from 'axios'\n\nconst baseUrl = '/api/blogs'\n\nlet token\n\nconst setToken = (newToken) => (token = `bearer ${newToken}`)\n\nconst getAll = () => {\n  const req = axios.get(baseUrl)\n  return req.then((response) => response.data)\n}\n\nconst createBlog = async (blog) => {\n  const res = await axios.post(baseUrl, blog, {\n    headers: { Authorization: token },\n  })\n  return res.data\n}\n\nconst updateBlog = async (blog, id) => {\n  const res = await axios.put(`${baseUrl}/${id}`, blog)\n  return res.data\n}\n\nconst deleteBlog = async (id) => {\n  const res = await axios.delete(`${baseUrl}/${id}`, {\n    headers: { Authorization: token },\n  })\n  return res\n}\n\nexport default { getAll, createBlog, updateBlog, setToken, deleteBlog, }\n","import React from 'react'\nimport ToggleVisibility from './ToggleVisibility'\nimport Button from './Button'\nimport PropTypes from 'prop-types'\n\nconst Blog = ({ blog, loggedUser, modifyBlog, handleBlogDeletion }) => {\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5,\n  }\n\n  const likeBlog = () => modifyBlog(blog)\n\n  const handleDeletion = () =>\n    window.confirm(`Remove blog '${blog.title}' by ${blog.author}`)\n      ? handleBlogDeletion(blog.id)\n      : null\n\n  const toggleDeleteButton = () => {\n    if (blog.user.username === loggedUser) {\n      return (\n        <Button handleClick={handleDeletion} label=\"delete\" id=\"delete-blog\" color=\"#f44336\" />\n      )\n    }\n  }\n\n  return (\n    <div className=\"blogs\" style={blogStyle}>\n      <div className=\"blog-title\">\n        {blog.title} {blog.author}\n      </div>\n      <ToggleVisibility labelOne=\"hide\" labelTwo=\"view\" className=\"toggle\">\n        <div className=\"blog-url\"> {blog.url}</div>\n        <div>\n            likes <span id=\"num-of-likes\">{blog.likes}</span>\n          <Button handleClick={likeBlog} label=\"like\" color=\"green\" id=\"like-blog\"/>\n        </div>\n        <div> {blog.author}</div>\n        {toggleDeleteButton()}\n      </ToggleVisibility>\n    </div>\n  )\n}\n\nBlog.propTypes = {\n  blog: PropTypes.object.isRequired,\n  loggedUser: PropTypes.string,\n  modifyBlog: PropTypes.func,\n  handleBlogDeletion: PropTypes.func,\n}\n\nexport default Blog\n","import React, { useState } from 'react'\nimport Button from './Button'\nimport PropTypes from 'prop-types'\n\nconst BlogForm = ({ addBlog }) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const handleTitleChange = ({ target }) => setTitle(target.value)\n  const handleAuthorChange = ({ target }) => setAuthor(target.value)\n  const handleUrlChange = ({ target }) => setUrl(target.value)\n\n  const handleBlogCreation = (event) => {\n    event.preventDefault()\n    addBlog({ title, author, url })\n\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n  return (\n    <div style={{ marginBottom:5 }}>\n      <h2>Create New Blog</h2>\n      <form onSubmit={handleBlogCreation}>\n        <div>\n          <label>\n            Title\n            <input\n              onChange={handleTitleChange}\n              value={title}\n              type=\"text\"\n              name=\"title\"\n              autoComplete=\"on\"\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Author\n            <input\n              onChange={handleAuthorChange}\n              value={author}\n              type=\"text\"\n              name=\"author\"\n              autoComplete=\"name\"\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Url\n            <input\n              onChange={handleUrlChange}\n              value={url}\n              type=\"url\"\n              name=\"url\"\n              autoComplete=\"url\"\n            />\n          </label>\n        </div>\n        <Button label='create' color= 'green' id='post-blog' />\n      </form>\n    </div>\n  )\n}\n\nBlogForm.propTypes = {\n  addBlog: PropTypes.func.isRequired,\n}\n\nexport default BlogForm\n","import React, { useState } from 'react'\r\nimport Button from './Button'\r\n\r\nconst LoginForm = ({ login, toggleSignUp }) => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const handleUsernameChange = ({ target }) => setUsername(target.value)\r\n  const handlePasswordChange = ({ target }) => setPassword(target.value)\r\n\r\n  const handleLogin = (event) => {\r\n    event.preventDefault()\r\n    login({ username, password })\r\n    setUsername('')\r\n    setPassword('')\r\n  }\r\n\r\n  return (\r\n    <div style={{display: toggleSignUp ? 'none' : ''}}>\r\n      <h2>Log in to application</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          <label>\r\n            Username\r\n            <input\r\n              onChange={handleUsernameChange}\r\n              value={username}\r\n              type=\"text\"\r\n              name=\"username\"\r\n              autoComplete=\"username\"\r\n            />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Password\r\n            <input\r\n              onChange={handlePasswordChange}\r\n              value={password}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              autoComplete=\"currnt-password\"\r\n            />\r\n          </label>\r\n        </div>\r\n        <Button label='log in' color='green'/>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import React from 'react'\n\nconst Notification = ({ noticeToUser }) => {\n  if (noticeToUser === null) return null\n\n  const messageStyle = {\n    color: noticeToUser.code ? 'green' : 'red',\n    fontSize: 26,\n    padding: 5,\n    border: '0.1em solid',\n    borderRadius: 5,\n    marginTop: 10,\n    marginBottom: 10,\n    backgroundColor: '#F0F0F0',\n  }\n\n  return (\n    <div className=\"notice\" style={messageStyle}>\n      {noticeToUser.message}\n    </div>\n  )\n\n}\n\nexport default Notification\n","import axios from 'axios'\n\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const res = await axios.post(baseUrl, credentials)\n  return res.data\n}\n\nexport default { login }","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/users'\r\n\r\nconst getUser = async (id) => {\r\n  const res = await axios.get(`${baseUrl}/${id}`)\r\n  return res.data\r\n}\r\n\r\nconst createUser = async (user) => {\r\n  const res = await axios.post(baseUrl, user)\r\n  return res.data\r\n}\r\n\r\nexport default { getUser, createUser, }","import React, { useState } from 'react'\r\nimport Button from './Button'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst SignUpForm = ({ addUser }) => {\r\n  const [username, setUserName] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [password, setPasswd] = useState('')\r\n\r\n  const handleUserNameChange = ({ target }) => setUserName(target.value)\r\n  const handleNameChange = ({ target }) => setName(target.value)\r\n  const handlePasswdChange = ({ target }) => setPasswd(target.value)\r\n\r\n  const handleUserRegistration = (event) => {\r\n    event.preventDefault()\r\n    addUser({ username, name, password })\r\n\r\n    setUserName('')\r\n    setName('')\r\n    setPasswd('')\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginBottom:5 }}>\r\n      <h2>Register</h2>\r\n      <form onSubmit={handleUserRegistration}>\r\n        <div>\r\n          <label>\r\n            Username\r\n            <input\r\n              onChange={handleUserNameChange}\r\n              value={username}\r\n              type=\"text\"\r\n              name=\"userName\"\r\n              autoComplete=\"on\"\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Name\r\n            <input\r\n              onChange={handleNameChange}\r\n              value={name}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              autoComplete=\"name\"\r\n            />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Password\r\n            <input\r\n              onChange={handlePasswdChange}\r\n              value={password}\r\n              type=\"password\"\r\n              name=\"passwd\"\r\n              autoComplete=\"password\"\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n        <Button label='Sign Up' color= 'green' id='add-user' />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nSignUpForm.propTypes = {\r\n  addUser: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default SignUpForm","import React, { useState, useEffect, useRef } from 'react'\r\nimport Blog from './components/Blog'\r\nimport BlogForm from './components/BlogForm'\r\nimport LoginForm from './components/LoginForm'\r\nimport Notification from './components/Notification'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport userService from './services/users'\r\nimport ToggleVisibility from './components/ToggleVisibility'\r\nimport Button from './components/Button'\r\nimport SignUpForm from './components/SignUpForm'\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [user, setUser] = useState(null)\r\n  const [noticeToUser, setNoticeToUser] = useState(null)\r\n  const [toggleSignUp, setToggleSignUp] = useState(false)\r\n  const blogFormRef = useRef()\r\n\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then((blogs) => setBlogs(blogs))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const isLoggedIn = window.localStorage.getItem('loggedInUser')\r\n    if (isLoggedIn) {\r\n      const parsedUser = JSON.parse(isLoggedIn)\r\n      setUser(parsedUser)\r\n      blogService.setToken(parsedUser.token)\r\n    }\r\n  }, [])\r\n\r\n  const sortedBlogs = blogs.concat().sort((a, b) => a.likes - b.likes).reverse()\r\n\r\n  const alertUser = async (newMessage, newCode) => {\r\n    setNoticeToUser({ message: newMessage, code: newCode })\r\n    await setTimeout(() => setNoticeToUser(null), 5000)\r\n  }\r\n\r\n  const handleLogin = async (credentials) => {\r\n    try {\r\n      const user = await loginService.login(credentials)\r\n\r\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\r\n\r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n    } catch (err) {\r\n      console.log('login error', err.response.data.error)\r\n      await alertUser('Wrong password or username', 0)\r\n    }\r\n  }\r\n\r\n  const registerUser = async (newUser) => {\r\n    try {\r\n      const createdUser = await userService.createUser(newUser)\r\n      await handleLogin({username: createdUser.username, password: newUser.password})\r\n    } catch (err) {\r\n      console.log('sign up error', err.response.data.error)\r\n      await alertUser(`${err.response.data.error}`, 0)\r\n    }\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    setUser(null)\r\n    setToggleSignUp(false)\r\n    window.localStorage.removeItem('loggedInUser')\r\n  }\r\n\r\n  const handleBlogCreation = async (newBlog) => {\r\n    try {\r\n      blogFormRef.current.toggleVisibility()\r\n\r\n      const createdBlog = await blogService.createBlog(newBlog)\r\n      const blogCreator = await userService.getUser(createdBlog.user)\r\n\r\n      createdBlog.user = blogCreator //populates user field of created blog with the creator's details\r\n      setBlogs(blogs.concat(createdBlog))\r\n      await alertUser(`A new blog '${createdBlog.title}' has been added!`, 1)\r\n    } catch (err) {\r\n      console.log('blog creation failed', err.response.data.error)\r\n      await alertUser(`${err.response.data.error}`, 0)\r\n    }\r\n  }\r\n\r\n  const modifyBlog = async (newBlog) => {\r\n    try {\r\n      const toBeUpdated = {\r\n        user: newBlog.user.id,\r\n        title: newBlog.title,\r\n        author: newBlog.author,\r\n        likes: (newBlog.likes += 1),\r\n      }\r\n      const updatedBlog = await blogService.updateBlog(toBeUpdated, newBlog.id)\r\n      setBlogs(\r\n        blogs.map((b) =>\r\n          b.id !== newBlog.id\r\n            ? b\r\n            : { ...updatedBlog, user: (updatedBlog.user = newBlog.user) }\r\n        )\r\n      )\r\n      await alertUser(`Thanks for liking the post, '${updatedBlog.title}'!`, 1)\r\n    } catch (err) {\r\n      console.error('error', err.message)\r\n    }\r\n  }\r\n\r\n  const handleBlogDeletion = async (id) => {\r\n    try {\r\n      const removed = (await blogService.deleteBlog(id))\r\n      console.log('res', removed)\r\n\r\n      if (removed.status === 204) {\r\n        setBlogs(blogs.filter((b) => b.id !== id))\r\n        await alertUser('Blog deletion successful\\'!', 1)\r\n      }\r\n    } catch (err) {\r\n      console.error('error', err)\r\n      await alertUser(`Deletion failed: ${err.response.data.error}'!`, 1)\r\n    }\r\n  }\r\n\r\n  if (user === null) {\r\n    return (\r\n      <div>\r\n        <Notification noticeToUser={noticeToUser} />\r\n        <LoginForm login={handleLogin} toggleSignUp={toggleSignUp} />\r\n        <ToggleVisibility labelOne=\"Sign in\" labelTwo=\"Register\" setToggleSignUp={setToggleSignUp} >\r\n          <SignUpForm addUser={registerUser}/>\r\n        </ToggleVisibility>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Notification noticeToUser={noticeToUser} />\r\n      <h2>blogs</h2>\r\n      <p>\r\n        {user.name} is logged in\r\n        <Button handleClick={handleLogout} label=\"logout\" color=\"grey\" />\r\n      </p>\r\n      <ToggleVisibility\r\n        ref={blogFormRef}\r\n        labelOne=\"cancel\"\r\n        labelTwo=\"create blog\"\r\n      >\r\n        <BlogForm addBlog={handleBlogCreation} />\r\n      </ToggleVisibility>\r\n      {sortedBlogs.map((blog) => (\r\n        <Blog\r\n          key={blog.id}\r\n          blog={blog}\r\n          loggedUser={user.username}\r\n          handleBlogDeletion={handleBlogDeletion}\r\n          modifyBlog={modifyBlog}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}