{"version":3,"sources":["components/Button.js","components/ToggleVisibility.js","services/blogs.js","components/Blog.js","components/BlogForm.js","components/LoginForm.js","components/Notification.js","services/login.js","services/users.js","App.js","index.js"],"names":["Button","marginBottom","color","label","id","className","handleClick","buttonStyle","fontSize","borderRadius","borderColor","backgroundColor","textDecoration","style","onClick","ToggleVisibility","React","forwardRef","props","ref","useState","visible","setVisibility","hideOrShow","display","toggleVisibility","labelOne","labelTwo","useImperativeHandle","children","displayName","token","Blog","blog","loggedUser","modifyBlog","handleBlogDeletion","handleDeletion","window","confirm","title","author","paddingTop","paddingLeft","border","borderWidth","url","likes","user","username","toggleDeleteButton","BlogForm","addBlog","setTitle","setAuthor","setUrl","onSubmit","event","preventDefault","onChange","target","value","type","name","autoComplete","LoginForm","login","setUsername","password","setPassword","Notification","noticeToUser","messageStyle","code","padding","marginTop","message","getAll","axios","get","then","response","data","createBlog","a","post","headers","Authorization","res","updateBlog","put","setToken","newToken","deleteBlog","delete","credentials","getUser","App","blogs","setBlogs","setUser","setNoticeToUser","blogFormRef","useRef","useEffect","blogService","isLoggedIn","localStorage","getItem","parsedUser","JSON","parse","sortedBlogs","concat","sort","b","reverse","alertUser","newMessage","newCode","setTimeout","handleLogin","loginService","setItem","stringify","console","log","error","handleBlogCreation","newBlog","current","createdBlog","userService","blogCreator","toBeUpdated","updatedBlog","map","removed","status","filter","removeItem","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56592cdb.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Button = ({ marginBottom, color, label, id, className, handleClick }) => {\n  const buttonStyle = {\n    fontSize: label === '&#10003;' ? '20px' : '15px',\n    borderRadius: 6,\n    borderColor: 'white',\n    backgroundColor: color,\n    textDecoration: 'none',\n    color: '#ffffff',\n    marginBottom: marginBottom,\n  }\n  return (\n    <>\n      <button style={buttonStyle} onClick={handleClick} id={id} className={className}>\n        {label}\n      </button>\n    </>\n  )\n}\n\nButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleClick: PropTypes.func,\n  color: PropTypes.string,\n  marginBottom: PropTypes.number,\n  id: PropTypes.string\n}\nexport default Button","import React, { useState, useImperativeHandle } from 'react'\nimport Button from './Button'\nimport PropTypes from 'prop-types'\n\nconst ToggleVisibility = React.forwardRef((props, ref) => {\n  const [visible, setVisibility] = useState(false)\n\n  const hideOrShow = { display: visible ? '' : 'none' }\n  const toggleVisibility = () => setVisibility(!visible)\n  const label = visible ? props.labelOne : props.labelTwo\n\n  useImperativeHandle(ref, () => ({ toggleVisibility }))\n\n  return (\n    <div>\n      <div style={hideOrShow} className='hideOrShow'> {props.children} </div>\n      <Button handleClick={toggleVisibility} label={label} className={props.className} color={visible ? 'orange' : '#008CBA'} marginBottom={10} />\n    </div>\n  )\n})\n\nToggleVisibility.displayName = 'ToggleVisibility'\n\nToggleVisibility.propTypes = {\n  labelOne: PropTypes.string.isRequired,\n  labelTwo: PropTypes.string.isRequired,\n  id: PropTypes.string,\n}\n\n\nexport default ToggleVisibility\n","import axios from 'axios'\n\nconst baseUrl = '/api/blogs'\n\nlet token\n\nconst setToken = (newToken) => (token = `bearer ${newToken}`)\n\nconst getAll = () => {\n  const req = axios.get(baseUrl)\n  return req.then((response) => response.data)\n}\n\nconst createBlog = async (blog) => {\n  const res = await axios.post(baseUrl, blog, {\n    headers: { Authorization: token },\n  })\n  return res.data\n}\n\nconst updateBlog = async (blog, id) => {\n  const res = await axios.put(`${baseUrl}/${id}`, blog)\n  return res.data\n}\n\nconst deleteBlog = async (id) => {\n  const res = await axios.delete(`${baseUrl}/${id}`, {\n    headers: { Authorization: token },\n  })\n  return res\n}\n\nexport default { getAll, createBlog, updateBlog, setToken, deleteBlog, }\n","import React from 'react'\nimport ToggleVisibility from './ToggleVisibility'\nimport Button from './Button'\nimport PropTypes from 'prop-types'\n\nconst Blog = ({ blog, loggedUser, modifyBlog, handleBlogDeletion }) => {\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5,\n  }\n\n  const likeBlog = () => modifyBlog(blog)\n\n  const handleDeletion = () =>\n    window.confirm(`Remove blog '${blog.title}' by ${blog.author}`)\n      ? handleBlogDeletion(blog.id)\n      : null\n\n  const toggleDeleteButton = () => {\n    if (blog.user.username === loggedUser) {\n      return (\n        <Button handleClick={handleDeletion} label=\"delete\" id=\"delete-blog\" color=\"#f44336\" />\n      )\n    }\n  }\n\n  return (\n    <div className=\"blogs\" style={blogStyle}>\n      <div className=\"blog-title\">\n        {blog.title} {blog.author}\n      </div>\n      <ToggleVisibility labelOne=\"hide\" labelTwo=\"view\" className=\"toggle\">\n        <div className=\"blog-url\"> {blog.url}</div>\n        <div>\n            likes <span id=\"num-of-likes\">{blog.likes}</span>\n          <Button handleClick={likeBlog} label=\"like\" color=\"green\" id=\"like-blog\"/>\n        </div>\n        <div> {blog.author}</div>\n        {toggleDeleteButton()}\n      </ToggleVisibility>\n    </div>\n  )\n}\n\nBlog.propTypes = {\n  blog: PropTypes.object.isRequired,\n  loggedUser: PropTypes.string,\n  modifyBlog: PropTypes.func,\n  handleBlogDeletion: PropTypes.func,\n}\n\nexport default Blog\n","import React, { useState } from 'react'\nimport Button from './Button'\nimport PropTypes from 'prop-types'\n\nconst BlogForm = ({ addBlog }) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const handleTitleChange = ({ target }) => setTitle(target.value)\n  const handleAuthorChange = ({ target }) => setAuthor(target.value)\n  const handleUrlChange = ({ target }) => setUrl(target.value)\n\n  const handleBlogCreation = (event) => {\n    event.preventDefault()\n    addBlog({ title, author, url })\n\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n  return (\n    <div style={{ marginBottom:5 }}>\n      <h2>Create New Blog</h2>\n      <form onSubmit={handleBlogCreation}>\n        <div>\n          <label>\n            Title\n            <input\n              onChange={handleTitleChange}\n              value={title}\n              type=\"text\"\n              name=\"title\"\n              autoComplete=\"on\"\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Author\n            <input\n              onChange={handleAuthorChange}\n              value={author}\n              type=\"text\"\n              name=\"author\"\n              autoComplete=\"name\"\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Url\n            <input\n              onChange={handleUrlChange}\n              value={url}\n              type=\"url\"\n              name=\"url\"\n              autoComplete=\"url\"\n            />\n          </label>\n        </div>\n        <Button label='create' color= 'green' id='post-blog' />\n      </form>\n    </div>\n  )\n}\n\nBlogForm.propTypes = {\n  addBlog: PropTypes.func.isRequired,\n}\n\nexport default BlogForm\n","import React, { useState } from 'react'\nimport Button from './Button'\n\nconst LoginForm = ({ login }) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleUsernameChange = ({ target }) => setUsername(target.value)\n  const handlePasswordChange = ({ target }) => setPassword(target.value)\n\n  const handleLogin = (event) => {\n    event.preventDefault()\n    login({ username, password })\n    setUsername('')\n    setPassword('')\n  }\n\n  return (\n    <>\n      <h2>Log in to application</h2>\n      <form onSubmit={handleLogin}>\n        <div>\n          <label>\n            Username\n            <input\n              onChange={handleUsernameChange}\n              value={username}\n              type=\"text\"\n              name=\"username\"\n              autoComplete=\"username\"\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Password\n            <input\n              onChange={handlePasswordChange}\n              value={password}\n              type=\"password\"\n              name=\"password\"\n              autoComplete=\"currnt-password\"\n            />\n          </label>\n        </div>\n        <Button label='log in' color='green'/>\n      </form>\n    </>\n  )\n}\n\nexport default LoginForm\n","import React from 'react'\n\nconst Notification = ({ noticeToUser }) => {\n  if (noticeToUser === null) return null\n\n  const messageStyle = {\n    color: noticeToUser.code ? 'green' : 'red',\n    fontSize: 26,\n    padding: 5,\n    border: '0.1em solid',\n    borderRadius: 5,\n    marginTop: 10,\n    marginBottom: 10,\n    backgroundColor: '#F0F0F0',\n  }\n\n  return (\n    <div className=\"notice\" style={messageStyle}>\n      {noticeToUser.message}\n    </div>\n  )\n\n}\n\nexport default Notification\n","import axios from 'axios'\n\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const res = await axios.post(baseUrl, credentials)\n  return res.data\n}\n\nexport default { login }","import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nconst getUser = async (id) => {\n  const res = await axios.get(`${baseUrl}/${id}`)\n  return res.data\n}\n\nexport default { getUser }","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport BlogForm from './components/BlogForm'\nimport LoginForm from './components/LoginForm'\nimport Notification from './components/Notification'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport userService from './services/users'\nimport ToggleVisibility from './components/ToggleVisibility'\nimport Button from './components/Button'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const [noticeToUser, setNoticeToUser] = useState(null)\n  const blogFormRef = useRef()\n\n  useEffect(() => {\n    blogService.getAll().then((blogs) => setBlogs(blogs))\n  }, [])\n\n  useEffect(() => {\n    const isLoggedIn = window.localStorage.getItem('loggedInUser')\n    if (isLoggedIn) {\n      const parsedUser = JSON.parse(isLoggedIn)\n      setUser(parsedUser)\n      blogService.setToken(parsedUser.token)\n    }\n  }, [])\n\n  const sortedBlogs = blogs.concat().sort((a, b) => a.likes - b.likes).reverse()\n\n  const alertUser = async (newMessage, newCode) => {\n    setNoticeToUser({ message: newMessage, code: newCode })\n    await setTimeout(() => setNoticeToUser(null), 5000)\n  }\n\n  const handleLogin = async (credentials) => {\n    try {\n      const user = await loginService.login(credentials)\n\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n\n      blogService.setToken(user.token)\n      setUser(user)\n    } catch (err) {\n      console.log('login error', err.response.data.error)\n      await alertUser('Wrong password or username', 0)\n    }\n  }\n\n  const handleLogout = () => {\n    setUser(null)\n    window.localStorage.removeItem('loggedInUser')\n  }\n\n  const handleBlogCreation = async (newBlog) => {\n    try {\n      blogFormRef.current.toggleVisibility()\n\n      const createdBlog = await blogService.createBlog(newBlog)\n      const blogCreator = await userService.getUser(createdBlog.user)\n\n      createdBlog.user = blogCreator //populates user field of created blog with the creator's details\n      setBlogs(blogs.concat(createdBlog))\n      await alertUser(`A new blog '${createdBlog.title}' has been added!`, 1)\n    } catch (err) {\n      console.log('blog creation failed', err.response.data.error)\n      await alertUser(`${err.response.data.error}`, 0)\n    }\n  }\n\n  const modifyBlog = async (newBlog) => {\n    try {\n      const toBeUpdated = {\n        user: newBlog.user.id,\n        title: newBlog.title,\n        author: newBlog.author,\n        likes: (newBlog.likes += 1),\n      }\n      const updatedBlog = await blogService.updateBlog(toBeUpdated, newBlog.id)\n      setBlogs(\n        blogs.map((b) =>\n          b.id !== newBlog.id\n            ? b\n            : { ...updatedBlog, user: (updatedBlog.user = newBlog.user) }\n        )\n      )\n      await alertUser(`Thanks for liking the post, '${updatedBlog.title}'!`, 1)\n    } catch (err) {\n      console.error('error', err.message)\n    }\n  }\n\n  const handleBlogDeletion = async (id) => {\n    try {\n      const removed = (await blogService.deleteBlog(id))\n      console.log('res', removed)\n\n      if (removed.status === 204) {\n        setBlogs(blogs.filter((b) => b.id !== id))\n        await alertUser('Blog deletion successful\\'!', 1)\n      }\n    } catch (err) {\n      console.error('error', err)\n      await alertUser(`Deletion failed: ${err.response.data.error}'!`, 1)\n    }\n  }\n\n  if (user === null) {\n    return (\n      <div>\n        <Notification noticeToUser={noticeToUser} />\n        <LoginForm login={handleLogin} />\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Notification noticeToUser={noticeToUser} />\n      <h2>blogs</h2>\n      <p>\n        {user.name} is logged in\n        <Button handleClick={handleLogout} label=\"logout\" color=\"grey\" />\n      </p>\n      <ToggleVisibility\n        ref={blogFormRef}\n        labelOne=\"cancel\"\n        labelTwo=\"create blog\"\n      >\n        <BlogForm addBlog={handleBlogCreation} />\n      </ToggleVisibility>\n      {sortedBlogs.map((blog) => (\n        <Blog\n          key={blog.id}\n          blog={blog}\n          loggedUser={user.username}\n          handleBlogDeletion={handleBlogDeletion}\n          modifyBlog={modifyBlog}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}