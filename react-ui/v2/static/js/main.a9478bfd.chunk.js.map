{"version":3,"sources":["services/blogs.js","reducers/notificationReducer.js","services/users.js","services/login.js","reducers/usersReducer.js","components/DataList.js","components/Button.js","components/BlogForm.js","reducers/blogsReducer.js","components/LoginForm.js","components/Notification.js","components/ToggleVisibility.js","reducers/toggleReducer.js","components/SignUpForm.js","components/Blog.js","components/User.js","components/UserDetails.js","components/CommentForm.js","components/BlogDetails.js","App.js","index.js"],"names":["token","notifyUser","message","code","dispatch","a","type","Promise","setTimeout","notificationReducer","state","action","baseUrl","getAll","axios","get","res","data","createBlog","blog","post","headers","Authorization","updateBlog","id","put","setToken","newToken","deleteBlog","delete","createComment","comment","blogId","getUsers","getUser","createUser","user","login","credentials","setCurrentUser","loginService","currentUser","window","localStorage","setItem","JSON","stringify","blogService","console","log","response","error","DataList","sortby","children","dataList","useSelector","concat","sort","b","blogs","length","reverse","style","marginLeft","map","React","Children","child","cloneElement","key","Button","marginBottom","color","label","className","handleClick","buttonStyle","borderRadius","borderColor","backgroundColor","textDecoration","onClick","BlogForm","toggleForm","useDispatch","useState","title","setTitle","author","setAuthor","url","setUrl","history","useHistory","onSubmit","event","newBlog","preventDefault","current","toggleVisibility","createdBlog","userService","blogCreator","push","onChange","target","value","name","autoComplete","LoginForm","toggleSignUp","toggle","username","setUsername","password","setPassword","display","Notification","notice","messageStyle","fontSize","padding","border","marginTop","ToggleVisibility","forwardRef","props","ref","visible","setVisibility","hideOrShow","labelOne","labelTwo","useImperativeHandle","displayName","SignUpForm","setUserName","setName","setPasswd","newUserInfo","createdUser","newUser","required","Blog","ListItem","button","component","Link","to","ListItemText","primary","secondary","User","itemStyle","paddingTop","paddingLeft","width","textAlign","float","UserDetails","CommentForm","content","setContent","cmt","commentedBlog","commentOnBlog","placeholder","BlogDetails","users","handleBlogDeletion","confirm","deleted","status","pathname","likes","likedBlog","modifyBlog","location","reload","toggleDeleteButton","comments","commentsOnBlog","App","matchedUser","useRouteMatch","matchedBlog","blogFormRef","useRef","useEffect","isLoggedIn","getItem","parse","detailsToBeShown","match","find","params","Container","removeItem","path","reducers","combineReducers","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9478bfd.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = '/api/blogs';\n\nlet token;\n\nconst setToken = (newToken) => (token = `bearer ${newToken}`);\n\nconst getAll = async () => {\n  const res = await axios.get(baseUrl);\n  return res.data;\n};\n\nconst createBlog = async (blog) => {\n  const res = await axios.post(baseUrl, blog, {\n    headers: { Authorization: token }\n  });\n  return res.data;\n};\n\nconst updateBlog = async (blog, id) => {\n  const res = await axios.put(`${baseUrl}/${id}`, blog);\n  return res.data;\n};\n\nconst deleteBlog = async (id) => {\n  const res = await axios.delete(`${baseUrl}/${id}`, {\n    headers: { Authorization: token }\n  });\n  return res;\n};\n\nconst createComment = async (comment, blogId) => {\n  const res = await axios.post(`${baseUrl}/${blogId}/comments`, comment);\n  return res.data;\n};\n\nexport default {\n  getAll,\n  createBlog,\n  updateBlog,\n  setToken,\n  deleteBlog,\n  createComment\n};\n","const notificationReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'SET_NOTICE':\n    return { ...action };\n  case 'RESET_NOTICE':\n    return null;\n  default:\n    return state;\n  }\n};\n\nexport const notifyUser = (message, code) => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'SET_NOTICE',\n      message,\n      code\n    });\n\n    await new Promise(() => {\n      setTimeout(() => {\n        dispatch({\n          type: 'RESET_NOTICE'\n        });\n      }, 5000);\n    });\n  };\n};\n\nexport default notificationReducer;\n","import axios from 'axios';\n\nconst baseUrl = '/api/users';\n\nconst getUsers = async () => {\n  const res = await axios.get(`${baseUrl}`);\n  return res.data;\n};\nconst getUser = async (id) => {\n  const res = await axios.get(`${baseUrl}/${id}`);\n  return res.data;\n};\n\nconst createUser = async (user) => {\n  const res = await axios.post(baseUrl, user);\n  return res.data;\n};\n\nexport default { getUsers, getUser, createUser };\n","import axios from 'axios';\n\nconst baseUrl = '/api/login';\n\nconst login = async (credentials) => {\n  const res = await axios.post(baseUrl, credentials);\n  return res.data;\n};\n\nexport default { login };\n","import loginService from '../services/login';\r\nimport blogService from '../services/blogs';\r\nimport userService from '../services/users';\r\nimport { notifyUser } from '../reducers/notificationReducer';\r\nimport { toggleOff } from './toggleReducer';\r\n\r\nconst usersReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case 'SET_CURRENT_USER':\r\n      return { ...state, currentUser: action.currentUser };\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users };\r\n    case 'LOGOUT_USER':\r\n      return { ...state, currentUser: null };\r\n    case 'ADD_USER':\r\n      return { ...state, users: [...state.users, action.newUser] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setCurrentUser = (credentials) => {\r\n  // sets logged in user with data from directly from the server or from local storage\r\n  // if the user has already logged in.\r\n  return async (dispatch) => {\r\n    try {\r\n      const currentUser = !credentials?.token\r\n        ? await loginService.login(credentials)\r\n        : null;\r\n\r\n      if (currentUser)\r\n        window.localStorage.setItem('currentUser', JSON.stringify(currentUser));\r\n\r\n      blogService.setToken(currentUser?.token ?? credentials?.token);\r\n\r\n      dispatch({\r\n        type: 'SET_CURRENT_USER',\r\n        currentUser: currentUser ?? credentials\r\n      });\r\n    } catch (err) {\r\n      console.log('login error', err);\r\n      dispatch(notifyUser(err?.response?.data?.error, 0));\r\n    }\r\n  };\r\n};\r\n\r\nconst addUser = (newUserInfo) => {\r\n  // Authenticates a new user upon successful registration\r\n\r\n  return async (dispatch) => {\r\n    try {\r\n      const createdUser = await userService.createUser(newUserInfo);\r\n      if (createdUser) {\r\n        dispatch(\r\n          setCurrentUser({\r\n            username: createdUser.username,\r\n            password: newUserInfo.password\r\n          })\r\n        );\r\n        dispatch({\r\n          type: 'ADD_USER',\r\n          newUser: createdUser\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.log('sign up error', err);\r\n      if (err?.response?.data?.error)\r\n        dispatch(notifyUser(err?.response?.data?.error, 0));\r\n    }\r\n  };\r\n};\r\n\r\nconst setUsers = () => {\r\n  // sets redux store with all users data from the server\r\n\r\n  return async (dispatch) => {\r\n    try {\r\n      const users = await userService.getUsers();\r\n      dispatch({\r\n        type: 'SET_USERS',\r\n        users\r\n      });\r\n    } catch (err) {\r\n      console.log('get users error', err);\r\n    }\r\n  };\r\n};\r\n\r\nconst logoutUser = () => {\r\n  return async (dispatch) => {\r\n    await window.localStorage.removeItem('currentUser');\r\n    dispatch({\r\n      type: 'LOGOUT_USER'\r\n    });\r\n    dispatch(toggleOff());\r\n  };\r\n};\r\n\r\nexport {\r\n  usersReducer as default,\r\n  setCurrentUser,\r\n  logoutUser,\r\n  addUser,\r\n  setUsers\r\n};\r\n","// Reusable component for sorting and rendering a List of data\r\n// it receives children components as props.children\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DataList = ({ type, sortby, children }) => {\r\n  const sortData = (data) =>\r\n    data\r\n      .concat()\r\n      .sort(\r\n        (a, b) => a[sortby] - (type === 'users' ? b.blogs.length : b[sortby])\r\n      )\r\n      .reverse();\r\n\r\n  const dataList = useSelector((state) =>\r\n    sortData(type === 'users' ? state[type][type] : state[type])\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {type === 'users' && (\r\n        <div>\r\n          <h2>Users</h2> <h4 style={{ marginLeft: '18%' }}>Blogs Created</h4>\r\n        </div>\r\n      )}\r\n      {dataList?.map((data) =>\r\n        // This approach is used instead of {props.children} because of the additional\r\n        // props that are required to be passed to the child by this parent component.\r\n        // The child component is accessed and its clone is returned with newly passed props\r\n        React.Children.map(children, (child) =>\r\n          React.cloneElement(child, { data, key: data.id })\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nDataList.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  sortby: PropTypes.string.isRequired\r\n};\r\n\r\nexport default DataList;\r\n","import React from 'react';\nimport { Button as MuiButton } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ marginBottom, color, label, id, className, handleClick }) => {\n  const buttonStyle = {\n    borderRadius: 4,\n    borderColor: 'white',\n    backgroundColor: color,\n    textDecoration: 'none',\n    color: '#ffffff',\n    marginBottom: marginBottom\n  };\n  return (\n    <>\n      <button\n        style={buttonStyle}\n        onClick={handleClick}\n        id={id}\n        className={className}\n      >\n        {label}\n      </button>\n    </>\n  );\n};\n\nButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleClick: PropTypes.func,\n  color: PropTypes.string,\n  marginBottom: PropTypes.number,\n  id: PropTypes.string\n};\nexport default Button;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport Button from './Button';\nimport { notifyUser } from '../reducers/notificationReducer';\nimport { createNewBlog } from '../reducers/blogsReducer';\n\nconst BlogForm = ({ toggleForm }) => {\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [url, setUrl] = useState('');\n  const history = useHistory();\n\n  const handleTitleChange = ({ target }) => setTitle(target.value);\n  const handleAuthorChange = ({ target }) => setAuthor(target.value);\n  const handleUrlChange = ({ target }) => setUrl(target.value);\n\n  const handleBlogCreation = (event) => {\n    event.preventDefault();\n    toggleForm.current.toggleVisibility();\n    // dispatches the newly created blog to redux store\n    dispatch(createNewBlog({ title, author, url }));\n    dispatch(notifyUser(`A new blog '${title}' has been added!`, 1));\n    setTitle('');\n    setAuthor('');\n    setUrl('');\n    history.push('/');\n  };\n\n  return (\n    <div style={{ marginBottom: 5 }}>\n      <h2>Create New Blog</h2>\n      <form onSubmit={handleBlogCreation}>\n        <div>\n          <label>\n            Title\n            <input\n              onChange={handleTitleChange}\n              value={title}\n              type=\"text\"\n              name=\"title\"\n              autoComplete=\"on\"\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Author\n            <input\n              onChange={handleAuthorChange}\n              value={author}\n              type=\"text\"\n              name=\"author\"\n              autoComplete=\"name\"\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Url\n            <input\n              onChange={handleUrlChange}\n              value={url}\n              type=\"url\"\n              name=\"url\"\n              autoComplete=\"url\"\n            />\n          </label>\n        </div>\n        <Button label=\"create\" color=\"green\" id=\"post-blog\" />\n      </form>\n    </div>\n  );\n};\n\nexport default BlogForm;\n","import blogService from '../services/blogs';\nimport userService from '../services/users';\nimport { notifyUser } from '../reducers/notificationReducer';\n\nconst blogsReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'BLOGS':\n    return action.blogs;\n  case 'NEW_BLOG':\n    return [...state, action.newBlog];\n  case 'LIKE_BLOG':\n    // returns a new state contianing the modified blog\n    return state.map((b) =>\n      b.id !== action.likedBlog.id ? b : { ...action.likedBlog }\n    );\n  case 'DELETE_BLOG':\n    return state.filter((blog) => blog.id !== action.id);\n  case 'COMMENT_ON_BLOG':\n    return state.map((b) =>\n      b.id !== action.commentedBlog.id ? b : { ...action.commentedBlog }\n    );\n  default:\n    return state;\n  }\n};\n\nconst setBlogs = () => {\n  return async (dispatch) => {\n    const blogs = await blogService.getAll();\n    dispatch({\n      type: 'BLOGS',\n      blogs\n    });\n  };\n};\n\nconst createNewBlog = (newBlog) => {\n  return async (dispatch) => {\n    try {\n      const createdBlog = await blogService.createBlog(newBlog);\n      const blogCreator = await userService.getUser(createdBlog.user);\n\n      createdBlog.user = blogCreator; //populates user field of created blog with the creator's details\n      dispatch({\n        type: 'NEW_BLOG',\n        newBlog: createdBlog\n      });\n    } catch (err) {\n      console.log('blog creation failed', err.response.data.error);\n      dispatch(\n        notifyUser(`blog creation failed: ${err.response.data.error}`, 0)\n      );\n    }\n  };\n};\n\nconst modifyBlog = (blog) => {\n  return async (dispatch) => {\n    try {\n      const likedBlog = await blogService.updateBlog(blog, blog.id);\n      likedBlog.user = blog.user; // replaces the ObjectId type of the user field from the server with the user object\n      dispatch({\n        type: 'LIKE_BLOG',\n        likedBlog\n      });\n    } catch (err) {\n      console.error('error', err.message);\n    }\n  };\n};\n\nconst deleteBlog = (id) => {\n  return async (dispatch) => {\n    try {\n      const deleted = await blogService.deleteBlog(id);\n      console.log('res', deleted);\n\n      if (deleted.status === 204) {\n        dispatch({\n          type: 'DELETE_BLOG',\n          id\n        });\n        dispatch(notifyUser('blog successfully deleted?', 1));\n      }\n    } catch (err) {\n      console.error('error', err);\n    }\n  };\n};\n\nconst commentOnBlog = (cmt, blogId) => {\n  return async (dispatch) => {\n    try {\n      // returns the commented blog with the newly created comment\n      const commentedBlog = await blogService.createComment(cmt, blogId);\n\n      dispatch({\n        type: 'COMMENT_ON_BLOG',\n        commentedBlog\n      });\n    } catch (err) {\n      console.error('error', err.message);\n    }\n  };\n};\n\nexport {\n  blogsReducer as default,\n  setBlogs,\n  createNewBlog,\n  modifyBlog,\n  deleteBlog,\n  commentOnBlog\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCurrentUser } from '../reducers/usersReducer';\nimport Button from './Button';\n\nconst LoginForm = () => {\n  console.log('lg', 0);\n  const dispatch = useDispatch();\n  const toggleSignUp = useSelector((state) => state.toggle);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleUsernameChange = ({ target }) => setUsername(target.value);\n  const handlePasswordChange = ({ target }) => setPassword(target.value);\n\n  const handleLogin = (event) => {\n    console.log('lg', 1);\n\n    event.preventDefault();\n    dispatch(setCurrentUser({ username, password }));\n    console.log('lg', 2);\n    setUsername('');\n    setPassword('');\n  };\n\n  return (\n    <div style={{ display: toggleSignUp ? 'none' : '' }}>\n      <h2>Log in to application</h2>\n      <form onSubmit={handleLogin}>\n        <div>\n          <label>\n            Username\n            <input\n              onChange={handleUsernameChange}\n              value={username}\n              type=\"text\"\n              name=\"username\"\n              autoComplete=\"username\"\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Password\n            <input\n              onChange={handlePasswordChange}\n              value={password}\n              type=\"password\"\n              name=\"password\"\n              autoComplete=\"currnt-password\"\n            />\n          </label>\n        </div>\n        <Button label=\"log in\" color=\"green\" />\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst Notification = () => {\n  const notice = useSelector((state) => state.notice);\n  if (notice === null) return null;\n\n  const messageStyle = {\n    color: notice.code ? 'green' : 'red',\n    fontSize: 26,\n    padding: 5,\n    border: '0.1em solid',\n    borderRadius: 5,\n    marginTop: 10,\n    marginBottom: 10,\n    backgroundColor: '#F0F0F0'\n  };\n\n  return (\n    <div className=\"notice\" style={messageStyle}>\n      {notice.message}\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { useState, useImperativeHandle } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Button from './Button';\nimport PropTypes from 'prop-types';\nimport { toggleOff, toggleOn } from '../reducers/toggleReducer';\n\nconst ToggleVisibility = React.forwardRef((props, ref) => {\n  const dispatch = useDispatch();\n  const [visible, setVisibility] = useState(false);\n\n  const hideOrShow = { display: visible ? '' : 'none' };\n  const label = visible ? props.labelOne : props.labelTwo;\n\n  const toggleVisibility = () => {\n    if (label === 'Sign in' || label === 'Register')\n      label === 'Register'\n        ? dispatch(toggleOn())\n        : dispatch(toggleOff());\n    setVisibility(!visible);\n  };\n\n  useImperativeHandle(ref, () => ({ toggleVisibility }));\n\n  return (\n    <div>\n      <div style={hideOrShow} className=\"hideOrShow\">\n        {' '}\n        {props.children}{' '}\n      </div>\n      <Button\n        handleClick={toggleVisibility}\n        label={label}\n        className={props.className}\n        color={visible ? 'orange' : '#008CBA'}\n        marginBottom={10}\n      />\n    </div>\n  );\n});\n\nToggleVisibility.displayName = 'ToggleVisibility';\n\nToggleVisibility.propTypes = {\n  labelOne: PropTypes.string.isRequired,\n  labelTwo: PropTypes.string.isRequired,\n  id: PropTypes.string\n};\n\nexport default ToggleVisibility;\n","const toggleReducer = (state = false, action) => {\n  switch (action.type) {\n  case 'TOGGLE':\n    return true;\n  case 'RESET_TOGGLE':\n    return false;\n  default:\n    return state;\n  }\n};\n\nconst toggleOn = () => {\n  return {\n    type: 'TOGGLE'\n  };\n};\n\nconst toggleOff = () => {\n  return {\n    type: 'RESET_TOGGLE'\n  };\n};\n\nexport { toggleReducer as default, toggleOn, toggleOff };\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addUser } from '../reducers/usersReducer';\nimport Button from './Button';\n\nconst SignUpForm = () => {\n  const dispatch = useDispatch();\n  const [username, setUserName] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPasswd] = useState('');\n\n  const handleUserNameChange = ({ target }) => setUserName(target.value);\n  const handleNameChange = ({ target }) => setName(target.value);\n  const handlePasswdChange = ({ target }) => setPasswd(target.value);\n\n  const handleUserRegistration = (event) => {\n    event.preventDefault();\n    dispatch(addUser({ username, name, password }));\n\n    setUserName('');\n    setName('');\n    setPasswd('');\n  };\n\n  return (\n    <div style={{ marginBottom: 5 }}>\n      <h2>Register</h2>\n      <form onSubmit={handleUserRegistration}>\n        <div>\n          <label>\n            Username\n            <input\n              onChange={handleUserNameChange}\n              value={username}\n              type=\"text\"\n              name=\"userName\"\n              autoComplete=\"on\"\n              required\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Name\n            <input\n              onChange={handleNameChange}\n              value={name}\n              type=\"text\"\n              name=\"name\"\n              autoComplete=\"name\"\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Password\n            <input\n              onChange={handlePasswdChange}\n              value={password}\n              type=\"password\"\n              name=\"passwd\"\n              autoComplete=\"password\"\n              required\n            />\n          </label>\n        </div>\n        <Button label=\"Sign Up\" color=\"green\" id=\"add-user\" />\n      </form>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ListItem, ListItemText } from '@material-ui/core';\n\nconst Blog = ({ data }) => {\n  const blog = data;\n\n  return (\n    <>\n      <ListItem button component={Link} to={`/blogs/${blog.id}`}>\n        <ListItemText primary={blog.title} secondary={blog.author} />\n      </ListItem>\n    </>\n  );\n};\n\nexport default Blog;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst User = ({ data }) => {\n  const user = data;\n  const style = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    marginBottom: 5,\n    width: '20%'\n  };\n  const itemStyle = { padding: 5 };\n\n  return (\n    <div style={style}>\n      <span style={itemStyle}>\n        <NavLink to={`/users/${user.id}`}>{user.name}</NavLink>\n      </span>\n      <span style={{ ...itemStyle, textAlign: 'center', float: 'right' }}>\n        {user.blogs.length}\n      </span>\n    </div>\n  );\n};\n\nexport default User;\n","import React from 'react';\n\nconst UserDetails = ({ user }) => {\n  if (!user) return null;\n  return (\n    <div>\n      <h2> {user.name} </h2>\n      <h4> Added Blogs</h4>\n      <ul>\n        {user.blogs.map((blog) => (\n          <li key={user.id}> {blog.title} </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default UserDetails;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { commentOnBlog } from '../reducers/blogsReducer';\nimport Button from './Button';\n\nconst CommentForm = ({ blogId }) => {\n  const dispatch = useDispatch();\n  const [content, setContent] = useState('');\n  const handleContentChange = ({ target }) => setContent(target.value);\n\n  const addComment = (event) => {\n    event.preventDefault();\n    dispatch(commentOnBlog({ content }, blogId));\n    setContent('');\n  };\n\n  return (\n    <div>\n      <form onSubmit={addComment}>\n        <div>\n          <input\n            onChange={handleContentChange}\n            value={content}\n            type=\"text\"\n            name=\"username\"\n            required\n            placeholder=\"enter your comment\"\n          />\n          <Button label=\"Add Comment\" color=\"green\" />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CommentForm;\n","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { modifyBlog, deleteBlog } from '../reducers/blogsReducer';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from './Button';\r\nimport CommentForm from './CommentForm';\r\n\r\nconst BlogDetails = ({ blog }) => {\r\n  const dispatch = useDispatch();\r\n  const currentUser = useSelector((state) => state.users.currentUser);\r\n  const history = useHistory();\r\n\r\n  const likeBlog = () => {\r\n    dispatch(\r\n      modifyBlog({ ...blog, user: blog?.user?.id, likes: (blog.likes += 1) })\r\n    );\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleBlogDeletion = () => {\r\n    if (window.confirm(`Remove blog '${blog?.title}' by ${blog?.author}`)) {\r\n      dispatch(deleteBlog(blog?.id));\r\n      history.push('/');\r\n    }\r\n  };\r\n  const commentsOnBlog = () =>\r\n    blog?.comments?.map((cmt) => (\r\n      <ul key={cmt.id}>\r\n        <li>{cmt.content}</li>\r\n      </ul>\r\n    ));\r\n\r\n  const toggleDeleteButton = () => {\r\n    if (blog?.user?.username === currentUser.username) {\r\n      console.log('user', currentUser);\r\n      console.log('user2', blog.user);\r\n\r\n      return (\r\n        <Button\r\n          handleClick={handleBlogDeletion}\r\n          label=\"delete\"\r\n          id=\"delete-blog\"\r\n          color=\"#f44336\"\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  if (!blog) return null;\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        {' '}\r\n        {blog.title}, {blog.author}\r\n      </h2>\r\n      <h4>\r\n        {' '}\r\n        <Link to={{ pathname: blog.url }} target=\"_blank\">\r\n          {blog.url}\r\n        </Link>{' '}\r\n      </h4>\r\n      <ul>\r\n        <li>\r\n          likes <span id=\"num-of-likes\">{blog.likes}</span>\r\n        </li>\r\n        <li>added by {blog.user?.name} </li>\r\n      </ul>\r\n      <div>\r\n        <Button\r\n          handleClick={likeBlog}\r\n          label=\"like\"\r\n          color=\"green\"\r\n          id=\"like-blog\"\r\n        />\r\n        {toggleDeleteButton()}\r\n      </div>\r\n      <h3>Comments</h3>\r\n      <CommentForm blogId={blog.id} />\r\n      {commentsOnBlog()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogDetails;\r\n","import React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch, NavLink, Route, useRouteMatch } from 'react-router-dom';\nimport DataList from './components/DataList';\nimport BlogForm from './components/BlogForm';\nimport LoginForm from './components/LoginForm';\nimport Notification from './components/Notification';\nimport ToggleVisibility from './components/ToggleVisibility';\nimport Button from './components/Button';\nimport SignUpForm from './components/SignUpForm';\nimport { setBlogs } from './reducers/blogsReducer';\nimport { setCurrentUser, logoutUser, setUsers } from './reducers/usersReducer';\nimport Blog from './components/Blog';\nimport User from './components/User';\nimport UserDetails from './components/UserDetails';\nimport BlogDetails from './components/BlogDetails';\nimport { Container } from '@material-ui/core';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const [currentUser, users, blogs] = useSelector((state) => [\n    state.users.currentUser,\n    state.users.users,\n    state.blogs\n  ]);\n  const matchedUser = useRouteMatch('/users/:id');\n  const matchedBlog = useRouteMatch('/blogs/:id');\n  const blogFormRef = useRef();\n\n  useEffect(() => {\n    // initializes the redux store with blogs users from the server\n    dispatch(setBlogs());\n    dispatch(setUsers());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const isLoggedIn = window.localStorage.getItem('currentUser');\n    if (isLoggedIn) {\n      dispatch(setCurrentUser(JSON.parse(isLoggedIn)));\n    }\n  }, [dispatch]);\n\n  const handleLogout = () => {\n    dispatch(logoutUser());\n  };\n\n  const detailsToBeShown = (match, data) =>\n    match && data.find((data) => data.id === match.params.id);\n\n  if (!currentUser) {\n    return (\n      <Container>\n        <Notification />\n        <LoginForm />\n        <ToggleVisibility labelOne=\"Sign in\" labelTwo=\"Register\">\n          <SignUpForm />\n        </ToggleVisibility>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <div>\n        <NavLink to=\"/\">Blogs</NavLink>\n        <NavLink to=\"/users\">Users</NavLink>\n        {currentUser.name} is logged in\n        <Button handleClick={handleLogout} label=\"logout\" color=\"grey\" />\n      </div>\n      <Notification />\n      <h2>blogs</h2>\n\n      <ToggleVisibility\n        ref={blogFormRef}\n        labelOne=\"cancel\"\n        labelTwo=\"create blog\"\n      >\n        <BlogForm toggleForm={blogFormRef} />\n      </ToggleVisibility>\n      <Switch>\n        <Route path=\"/users/:id\">\n          <UserDetails user={detailsToBeShown(matchedUser, users)} />\n        </Route>\n        <Route path=\"/blogs/:id\">\n          <BlogDetails blog={detailsToBeShown(matchedBlog, blogs)} />\n        </Route>\n        <Route path=\"/users\">\n          <DataList type=\"users\" sortby=\"numberOfBlogs\">\n            <User />\n          </DataList>\n        </Route>\n        <Route path=\"/\">\n          <DataList type=\"blogs\" sortby=\"likes\">\n            <Blog />\n          </DataList>\n        </Route>\n      </Switch>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport notificationReducer from './reducers/notificationReducer';\nimport blogsReducer from './reducers/blogsReducer';\nimport usersReducer from './reducers/usersReducer';\nimport toggleReducer from './reducers/toggleReducer';\nimport App from './App';\n\nconst reducers = combineReducers({\n  notice: notificationReducer,\n  blogs: blogsReducer,\n  users: usersReducer,\n  toggle: toggleReducer\n});\nconst store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}